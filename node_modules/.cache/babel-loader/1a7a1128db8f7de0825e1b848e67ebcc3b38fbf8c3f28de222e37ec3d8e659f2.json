{"ast":null,"code":"var _jsxFileName = \"E:\\\\hospital_main\\\\src\\\\DoctorLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorInterface = () => {\n  _s();\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [patients, setPatients] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get('http://localhost:3005/departments');\n      setDepartments(response.data); // Update departments in state\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n      setErrorMessage('Error fetching departments. Please try again later.');\n    }\n  };\n  const fetchPatients = async () => {\n    try {\n      const response = await axios.get(`http://localhost:3005/patients/${encodeURIComponent(selectedDepartment)}`);\n      setPatients(response.data); // Update patients state with fetched data\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n      setErrorMessage('Error fetching patients. Please try again later.');\n    }\n  };\n  const handleDepartmentChange = event => {\n    setSelectedDepartment(event.target.value);\n    fetchPatients();\n  };\n  const handlePatientStatusChange = async patientId => {\n    try {\n      await axios.put(`http://localhost:3005/patients/${encodeURIComponent(selectedDepartment)}/${patientId}/status`, {\n        status: 'done'\n      });\n      // Update patient status in state or refetch patients\n    } catch (error) {\n      console.error('Error updating patient status:', error);\n      setErrorMessage('Error updating patient status. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"department\",\n        children: \"Select Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"department\",\n        value: selectedDepartment,\n        onChange: handleDepartmentChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), departments.map(department => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: department.name,\n          children: department.name\n        }, department.departmentid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patients\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), patients.map(patient => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: patient.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: patient.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePatientStatusChange(patient.id),\n          children: \"Mark as Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, patient.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorInterface, \"F1UWJkEb/+0UhL+O9+f1CaYaSjg=\");\n_c = DoctorInterface;\nexport default DoctorInterface;\nvar _c;\n$RefreshReg$(_c, \"DoctorInterface\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DoctorInterface","_s","selectedDepartment","setSelectedDepartment","patients","setPatients","departments","setDepartments","errorMessage","setErrorMessage","fetchDepartments","response","get","data","error","console","fetchPatients","encodeURIComponent","handleDepartmentChange","event","target","value","handlePatientStatusChange","patientId","put","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","id","onChange","map","department","name","departmentid","patient","onClick","_c","$RefreshReg$"],"sources":["E:/hospital_main/src/DoctorLogin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DoctorInterface = () => {\r\n  const [selectedDepartment, setSelectedDepartment] = useState('');\r\n  const [patients, setPatients] = useState([]);\r\n  const [departments, setDepartments] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3005/departments');\r\n      setDepartments(response.data); // Update departments in state\r\n    } catch (error) {\r\n      console.error('Error fetching departments:', error);\r\n      setErrorMessage('Error fetching departments. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async () => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3005/patients/${encodeURIComponent(selectedDepartment)}`);\r\n      setPatients(response.data); // Update patients state with fetched data\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n      setErrorMessage('Error fetching patients. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleDepartmentChange = (event) => {\r\n    setSelectedDepartment(event.target.value);\r\n    fetchPatients();\r\n  };\r\n\r\n  const handlePatientStatusChange = async (patientId) => {\r\n    try {\r\n      await axios.put(`http://localhost:3005/patients/${encodeURIComponent(selectedDepartment)}/${patientId}/status`, { status: 'done' });\r\n      // Update patient status in state or refetch patients\r\n    } catch (error) {\r\n      console.error('Error updating patient status:', error);\r\n      setErrorMessage('Error updating patient status. Please try again later.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Doctor Interface</h1>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <div>\r\n        <label htmlFor=\"department\">Select Department:</label>\r\n        <select id=\"department\" value={selectedDepartment} onChange={handleDepartmentChange}>\r\n          <option value=\"\">Select Department</option>\r\n          {departments.map((department) => (\r\n            <option key={department.departmentid} value={department.name}>\r\n              {department.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <h2>Patients</h2>\r\n        {/* Render patients as a list or table */}\r\n        {patients.map((patient) => (\r\n          <div key={patient.id}>\r\n            <p>{patient.name}</p>\r\n            <p>{patient.status}</p>\r\n            <button onClick={() => handlePatientStatusChange(patient.id)}>Mark as Done</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}