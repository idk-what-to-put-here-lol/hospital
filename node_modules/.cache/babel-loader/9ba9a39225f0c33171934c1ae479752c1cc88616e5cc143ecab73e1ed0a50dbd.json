{"ast":null,"code":"var _jsxFileName = \"E:\\\\hospital_test\\\\src\\\\DoctorLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoctorInterface() {\n  _s();\n  const [currentPatient, setCurrentPatient] = useState(null);\n  const [departmentId, setDepartmentId] = useState('');\n  const [departments, setDepartments] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get('http://localhost:3005/departments');\n      setDepartments(response.data);\n      if (response.data.length > 0) {\n        setDepartmentId(response.data[0].id);\n        await getNextPatient(response.data[0].id);\n      }\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n      setErrorMessage('Failed to fetch departments. Please try again later.');\n    }\n  };\n  const getNextPatient = async departmentId => {\n    try {\n      // Send a GET request to fetch the next patient of the selected department\n      const response = await axios.get(`http://localhost:3005/patients?departmentId=${departmentId}`);\n      const patientData = response.data;\n      if (patientData.length > 0) {\n        setCurrentPatient(patientData[0]); // Set the first patient as the current patient\n      } else {\n        setCurrentPatient(null); // Reset currentPatient if no patients are found\n        alert('No more patients in the queue for this department.');\n      }\n    } catch (error) {\n      console.error('Error fetching next patient:', error);\n    }\n  };\n  const handleChangeDepartment = e => {\n    const selectedDepartmentId = e.target.value;\n    setDepartmentId(selectedDepartmentId);\n    getNextPatient(selectedDepartmentId);\n  };\n  const handleServeNextPatient = async () => {\n    try {\n      if (currentPatient) {\n        // Update the current patient's status\n        await axios.put(`http://localhost:3005/patients/${currentPatient.patient_id}`, {\n          newStatus: 'done'\n        });\n        console.log('Current patient served');\n        // Fetch the next patient from the same department\n        console.log('Fetching next patient...');\n        await getNextPatient(departmentId);\n        console.log('Next patient fetched:', currentPatient); // Add this line for debugging\n      } else {\n        console.log('No patient to serve');\n      }\n    } catch (error) {\n      console.error('Error serving next patient:', error);\n      alert('Failed to serve next patient. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Doctor Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: departmentId,\n      onChange: handleChangeDepartment,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Department\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), departments.map(department => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: department.id,\n        children: department.name\n      }, department.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleServeNextPatient,\n      children: \"Serve Next Patient\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 24\n    }, this), currentPatient && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", currentPatient.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Date of Birth: \", currentPatient.dob]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Phone Number: \", currentPatient.phone_number]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Email: \", currentPatient.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Gender: \", currentPatient.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Department: \", currentPatient.department_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", currentPatient.queue_status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(DoctorInterface, \"Fc5uA44GLW41AGQMQGHWYSuifwA=\");\n_c = DoctorInterface;\nexport default DoctorInterface;\nvar _c;\n$RefreshReg$(_c, \"DoctorInterface\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DoctorInterface","_s","currentPatient","setCurrentPatient","departmentId","setDepartmentId","departments","setDepartments","errorMessage","setErrorMessage","fetchDepartments","response","get","data","length","id","getNextPatient","error","console","patientData","alert","handleChangeDepartment","e","selectedDepartmentId","target","value","handleServeNextPatient","put","patient_id","newStatus","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","department","name","onClick","className","dob","phone_number","email","gender","department_id","queue_status","_c","$RefreshReg$"],"sources":["E:/hospital_test/src/DoctorLogin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction DoctorInterface() {\r\n  const [currentPatient, setCurrentPatient] = useState(null);\r\n  const [departmentId, setDepartmentId] = useState('');\r\n  const [departments, setDepartments] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3005/departments');\r\n      setDepartments(response.data);\r\n      if (response.data.length > 0) {\r\n        setDepartmentId(response.data[0].id);\r\n        await getNextPatient(response.data[0].id);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching departments:', error);\r\n      setErrorMessage('Failed to fetch departments. Please try again later.');\r\n    }\r\n  };\r\n\r\n const getNextPatient = async (departmentId) => {\r\n  try {\r\n    // Send a GET request to fetch the next patient of the selected department\r\n    const response = await axios.get(`http://localhost:3005/patients?departmentId=${departmentId}`);\r\n    const patientData = response.data;\r\n\r\n    if (patientData.length > 0) {\r\n      setCurrentPatient(patientData[0]); // Set the first patient as the current patient\r\n    } else {\r\n      setCurrentPatient(null); // Reset currentPatient if no patients are found\r\n      alert('No more patients in the queue for this department.');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error fetching next patient:', error);\r\n  }\r\n};\r\n\r\n\r\n  const handleChangeDepartment = (e) => {\r\n    const selectedDepartmentId = e.target.value;\r\n    setDepartmentId(selectedDepartmentId);\r\n    getNextPatient(selectedDepartmentId);\r\n  };\r\n\r\nconst handleServeNextPatient = async () => {\r\n  try {\r\n    if (currentPatient) {\r\n      // Update the current patient's status\r\n      await axios.put(`http://localhost:3005/patients/${currentPatient.patient_id}`, { newStatus: 'done' });\r\n      console.log('Current patient served');\r\n      // Fetch the next patient from the same department\r\n      console.log('Fetching next patient...');\r\n      await getNextPatient(departmentId);\r\n      console.log('Next patient fetched:', currentPatient); // Add this line for debugging\r\n    } else {\r\n      console.log('No patient to serve');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error serving next patient:', error);\r\n    alert('Failed to serve next patient. Please try again later.');\r\n  }\r\n};\r\n  return (\r\n    <div>\r\n      <h2>Doctor Interface</h2>\r\n      <select value={departmentId} onChange={handleChangeDepartment}>\r\n        <option value=\"\">Select Department</option>\r\n        {departments.map((department) => (\r\n          <option key={department.id} value={department.id}>\r\n            {department.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleServeNextPatient}>Serve Next Patient</button>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      {currentPatient && (\r\n        <div>\r\n          <h2>Patient Details</h2>\r\n          <p>Name: {currentPatient.name}</p>\r\n          <p>Date of Birth: {currentPatient.dob}</p>\r\n          <p>Phone Number: {currentPatient.phone_number}</p>\r\n          <p>Email: {currentPatient.email}</p>\r\n          <p>Gender: {currentPatient.gender}</p>\r\n          <p>Department: {currentPatient.department_id}</p>\r\n          <p>Status: {currentPatient.queue_status}</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoctorInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}