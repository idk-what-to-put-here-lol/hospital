{"ast":null,"code":"var _jsxFileName = \"E:\\\\hospital_test\\\\src\\\\PatientRegistration.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Pusher from 'pusher-js'; // Correct import\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientRegistration = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    dob: '',\n    phoneNumber: '',\n    email: '',\n    gender: '',\n    departmentId: ''\n  });\n  const [departments, setDepartments] = useState([]);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // Initialize Pusher with your Pusher app credentials\n  const pusher = new Pusher('YOUR_PUSHER_APP_KEY', {\n    cluster: 'YOUR_PUSHER_CLUSTER'\n  });\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get('http://localhost:3005/departments');\n      setDepartments(response.data);\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n      setErrorMessage('Error fetching departments. Please try again later.');\n    }\n  };\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n  const handleChange = event => {\n    setFormData({\n      ...formData,\n      [event.target.name]: event.target.value\n    });\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:3005/register', formData);\n      toast.success('Patient registered successfully!');\n\n      // Trigger a Pusher event to notify the client\n      pusher.trigger('notifications', 'patient-registered', {\n        message: `New patient registered: ${formData.name}`\n      });\n      setFormData({\n        name: '',\n        dob: '',\n        phoneNumber: '',\n        email: '',\n        gender: '',\n        departmentId: ''\n      });\n      console.log('Patient registered successfully:', response.data);\n    } catch (error) {\n      console.error('Error registering patient:', error);\n      setErrorMessage('Failed to register patient. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient Registration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Full Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Register Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(PatientRegistration, \"TVWuKg+EMQfy20tc0cjU4t0bQG0=\");\n_c = PatientRegistration;\nexport default PatientRegistration;\nvar _c;\n$RefreshReg$(_c, \"PatientRegistration\");","map":{"version":3,"names":["React","useState","useEffect","axios","toast","ToastContainer","Pusher","jsxDEV","_jsxDEV","PatientRegistration","_s","formData","setFormData","name","dob","phoneNumber","email","gender","departmentId","departments","setDepartments","errorMessage","setErrorMessage","pusher","cluster","fetchDepartments","response","get","data","error","console","handleChange","event","target","value","handleSubmit","preventDefault","post","success","trigger","message","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","onChange","required","_c","$RefreshReg$"],"sources":["E:/hospital_test/src/PatientRegistration.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { toast, ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Pusher from 'pusher-js'; // Correct import\r\n\r\nconst PatientRegistration = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    dob: '',\r\n    phoneNumber: '',\r\n    email: '',\r\n    gender: '',\r\n    departmentId: '',\r\n  });\r\n\r\n  const [departments, setDepartments] = useState([]);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  // Initialize Pusher with your Pusher app credentials\r\n  const pusher = new Pusher('YOUR_PUSHER_APP_KEY', {\r\n    cluster: 'YOUR_PUSHER_CLUSTER',\r\n  });\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3005/departments');\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching departments:', error);\r\n      setErrorMessage('Error fetching departments. Please try again later.');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const handleChange = (event) => {\r\n    setFormData({ ...formData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('http://localhost:3005/register', formData);\r\n\r\n      toast.success('Patient registered successfully!');\r\n\r\n      // Trigger a Pusher event to notify the client\r\n      pusher.trigger('notifications', 'patient-registered', {\r\n        message: `New patient registered: ${formData.name}`,\r\n      });\r\n\r\n      setFormData({\r\n        name: '',\r\n        dob: '',\r\n        phoneNumber: '',\r\n        email: '',\r\n        gender: '',\r\n        departmentId: '',\r\n      });\r\n\r\n      console.log('Patient registered successfully:', response.data);\r\n    } catch (error) {\r\n      console.error('Error registering patient:', error);\r\n      setErrorMessage('Failed to register patient. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Patient Registration</h1>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <form onSubmit={handleSubmit}>\r\n        <label htmlFor=\"name\">Full Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          id=\"name\"\r\n          name=\"name\"\r\n          value={formData.name}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <br />\r\n        {/* Add other input fields for patient details */}\r\n        <button type=\"submit\">Register Patient</button>\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PatientRegistration;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}