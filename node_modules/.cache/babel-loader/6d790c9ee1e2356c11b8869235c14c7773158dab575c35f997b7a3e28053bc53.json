{"ast":null,"code":"var _jsxFileName = \"E:\\\\hospital_main\\\\src\\\\DoctorLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DoctorInterface = () => {\n  _s();\n  const [selectedDepartment, setSelectedDepartment] = useState('');\n  const [patients, setPatients] = useState([]);\n  const [currentPatientIndex, setCurrentPatientIndex] = useState(0);\n  const [departments, setDepartments] = useState([]); // Define departments state\n  const [errorMessage, setErrorMessage] = useState('');\n  useEffect(() => {\n    fetchDepartments();\n  }, []);\n  const fetchDepartments = async () => {\n    try {\n      const response = await axios.get('http://localhost:3005/departments');\n      setDepartments(response.data);\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n      setErrorMessage('Error fetching departments. Please try again later.');\n    }\n  };\n  const fetchPatients = async selectedDepartmentName => {\n    try {\n      const response = await axios.get(`http://localhost:3005/patients/${encodeURIComponent(selectedDepartmentName)}`);\n      setPatients(response.data);\n      setCurrentPatientIndex(0); // Reset current patient index when fetching new patients\n    } catch (error) {\n      console.error('Error fetching patients:', error);\n      setErrorMessage('Error fetching patients. Please try again later.');\n    }\n  };\n  const handleDepartmentChange = async event => {\n    const selectedDepartmentName = event.target.value;\n    setSelectedDepartment(selectedDepartmentName);\n    await fetchPatients(selectedDepartmentName);\n  };\n  const handleNextPatient = () => {\n    setCurrentPatientIndex(prevIndex => prevIndex + 1);\n  };\n  const handlePatientStatusChange = async patientId => {\n    if (!patientId) {\n      console.error('Invalid patientId:', patientId);\n      return;\n    }\n    try {\n      await axios.put(`http://localhost:3005/patients/${encodeURIComponent(selectedDepartment)}/${patientId}/status`, {\n        status: 'done'\n      });\n      // Mark patient as done in the UI\n      setPatients(prevPatients => prevPatients.map(patient => patient.id === patientId ? {\n        ...patient,\n        status: 'done'\n      } : patient));\n    } catch (error) {\n      console.error('Error updating patient status:', error);\n      setErrorMessage('Error updating patient status. Please try again later.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Doctor Interface\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"department\",\n        children: \"Select Department:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"department\",\n        value: selectedDepartment,\n        onChange: handleDepartmentChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Department\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), departments.map(department => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: department.name,\n          children: department.name\n        }, department.departmentid, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Patient Information\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), patients.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", patients[currentPatientIndex].name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", patients[currentPatientIndex].status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handlePatientStatusChange(patients[currentPatientIndex].id),\n          children: \"Mark as Done\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this), currentPatientIndex < patients.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNextPatient,\n          children: \"Next Patient\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No patients found for the selected department.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(DoctorInterface, \"vbDJ0Ixg91xMkqQiOAdkG7/J4wo=\");\n_c = DoctorInterface;\nexport default DoctorInterface;\nvar _c;\n$RefreshReg$(_c, \"DoctorInterface\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","DoctorInterface","_s","selectedDepartment","setSelectedDepartment","patients","setPatients","currentPatientIndex","setCurrentPatientIndex","departments","setDepartments","errorMessage","setErrorMessage","fetchDepartments","response","get","data","error","console","fetchPatients","selectedDepartmentName","encodeURIComponent","handleDepartmentChange","event","target","value","handleNextPatient","prevIndex","handlePatientStatusChange","patientId","put","status","prevPatients","map","patient","id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","onChange","department","name","departmentid","length","onClick","_c","$RefreshReg$"],"sources":["E:/hospital_main/src/DoctorLogin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DoctorInterface = () => {\r\n  const [selectedDepartment, setSelectedDepartment] = useState('');\r\n  const [patients, setPatients] = useState([]);\r\n  const [currentPatientIndex, setCurrentPatientIndex] = useState(0);\r\n  const [departments, setDepartments] = useState([]); // Define departments state\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    fetchDepartments();\r\n  }, []);\r\n\r\n  const fetchDepartments = async () => {\r\n    try {\r\n      const response = await axios.get('http://localhost:3005/departments');\r\n      setDepartments(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching departments:', error);\r\n      setErrorMessage('Error fetching departments. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const fetchPatients = async (selectedDepartmentName) => {\r\n    try {\r\n      const response = await axios.get(`http://localhost:3005/patients/${encodeURIComponent(selectedDepartmentName)}`);\r\n      setPatients(response.data);\r\n      setCurrentPatientIndex(0); // Reset current patient index when fetching new patients\r\n    } catch (error) {\r\n      console.error('Error fetching patients:', error);\r\n      setErrorMessage('Error fetching patients. Please try again later.');\r\n    }\r\n  };\r\n\r\n  const handleDepartmentChange = async (event) => {\r\n    const selectedDepartmentName = event.target.value;\r\n    setSelectedDepartment(selectedDepartmentName);\r\n    await fetchPatients(selectedDepartmentName);\r\n  };\r\n\r\n  const handleNextPatient = () => {\r\n    setCurrentPatientIndex((prevIndex) => prevIndex + 1);\r\n  };\r\n\r\n  const handlePatientStatusChange = async (patientId) => {\r\n  if (!patientId) {\r\n    console.error('Invalid patientId:', patientId);\r\n    return;\r\n  }\r\n\r\n  try {\r\n    await axios.put(`http://localhost:3005/patients/${encodeURIComponent(selectedDepartment)}/${patientId}/status`, { status: 'done' });\r\n    // Mark patient as done in the UI\r\n    setPatients((prevPatients) =>\r\n      prevPatients.map((patient) =>\r\n        patient.id === patientId ? { ...patient, status: 'done' } : patient\r\n      )\r\n    );\r\n  } catch (error) {\r\n    console.error('Error updating patient status:', error);\r\n    setErrorMessage('Error updating patient status. Please try again later.');\r\n  }\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n      <h1>Doctor Interface</h1>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <div>\r\n        <label htmlFor=\"department\">Select Department:</label>\r\n        <select id=\"department\" value={selectedDepartment} onChange={handleDepartmentChange}>\r\n          <option value=\"\">Select Department</option>\r\n          {departments.map((department) => (\r\n            <option key={department.departmentid} value={department.name}>\r\n              {department.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <h2>Patient Information</h2>\r\n        {patients.length > 0 ? (\r\n          <div>\r\n            <p>Name: {patients[currentPatientIndex].name}</p>\r\n            <p>Status: {patients[currentPatientIndex].status}</p>\r\n            <button onClick={() => handlePatientStatusChange(patients[currentPatientIndex].id)}>\r\n              Mark as Done\r\n            </button>\r\n            {currentPatientIndex < patients.length - 1 && (\r\n              <button onClick={handleNextPatient}>Next Patient</button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <p>No patients found for the selected department.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DoctorInterface;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}